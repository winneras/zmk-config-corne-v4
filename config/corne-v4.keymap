#define ZMK_MOUSE_DEFAULT_MOVE_VAL 1500  // 600
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 20    // 10

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

&lt {
    tapping-term-ms = <220>;
    flavor = "balanced";
    quick-tap-ms = <175>;
};

&mt {
    tapping-term-ms = <220>;
    flavor = "tap-preferred";
    quick-tap-ms = <175>;
};

/ {
    combos {
        compatible = "zmk,combos";

        par_l {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <5 4>;
            layers = <0 1 2 3>;
        };

        par_r {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <8 9>;
            layers = <0 1 2 3>;
        };

        bkt_l {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <32 33>;
            layers = <0 1 2 3>;
        };

        bkt_r {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <37 36>;
            layers = <0 1 2 3>;
        };

        brc_l {
            bindings = <&kp LEFT_BRACE>;
            key-positions = <18 19>;
            layers = <0 1 2 3>;
        };

        brc_r {
            bindings = <&kp RIGHT_BRACE>;
            key-positions = <22 23>;
            layers = <0 1 2 3>;
        };

        left_del {
            bindings = <&kp DELETE>;
            key-positions = <29 30>;
            layers = <0 1 2 3>;
        };

        right_del {
            bindings = <&kp DELETE>;
            key-positions = <39 40>;
            layers = <0 1 2 3>;
        };

        to_qwrt {
            bindings = <&to 1>;
            key-positions = <44 34 19>;
            layers = <0>;
        };

        to_qwrt_hrm {
            bindings = <&to 0>;
            key-positions = <42 43 44>;
            layers = <1>;
        };
    };

    behaviors {
        hml: homerow_mods_left {
            compatible = "zmk,behavior-hold-tap";
            label = "homerow_mods_left";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            hold-trigger-key-positions = <9 8 10 11 23 22 33 30 31 32 40 39 5 4 3 2 19 1 29 8 9 10 11 12 22 23 24 25 26 36 37 38 39 40 0 14 28 13 27 41>;
            tapping-term-ms = <280>;
            flavor = "balanced";
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            hold-trigger-on-release;
        };

        hmr: homerow_mods_right {
            compatible = "zmk,behavior-hold-tap";
            label = "homerow_mods_right";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            hold-trigger-key-positions = <1 2 3 4 5 15 16 17 29 8 9 10 11 12 36 37 38 39 40 22 1 2 3 4 5 15 16 17 18 19 29 30 31 32 33 0 14 28 13 27 41>;
            flavor = "balanced";
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            hold-trigger-on-release;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        qwrt_hrm {
            bindings = <
&kp ESC           &kp Q                &kp W            &kp E            &kp R              &kp T        &none             &none        &kp Y        &kp U               &kp I             &kp O             &kp P                   &kp BACKSPACE
&kp LEFT_CONTROL  &hml LEFT_CONTROL A  &hml LEFT_ALT S  &hml LEFT_GUI D  &hml LEFT_SHIFT F  &kp G        &none             &none        &kp H        &hmr RIGHT_SHIFT J  &hmr RIGHT_GUI K  &hmr RIGHT_ALT L  &hmr RIGHT_CONTROL SQT  &kp SEMI
&kp LEFT_SHIFT    &kp Z                &kp X            &kp C            &kp V              &kp B        &kp LS(LG(N4))    &caps_word   &kp N        &kp M               &kp COMMA         &kp DOT           &kp FSLH                &kp RIGHT_SHIFT
                                                                         &mt LCMD TAB       &lt 2 SPACE  &lt 3 ENTER       &lt 3 ENTER  &lt 2 SPACE  &lt 4 BACKSPACE
            >;

            label = "QWRT_HRM";
        };

        qwrt {
            bindings = <
&trans        &kp Q  &kp W  &kp E  &kp R                 &kp T      &none            &none       &kp Y   &kp U   &kp I      &kp O    &kp P     &trans
&kp LEFT_GUI  &kp A  &kp S  &kp D  &kp F                 &kp G      &none            &none       &kp H   &kp J   &kp K      &kp L    &kp SEMI  &kp SQT
&trans        &kp Z  &kp X  &kp C  &kp V                 &kp B      &kp LS(LG(S))    &caps_word  &kp N   &kp M   &kp COMMA  &kp DOT  &kp FSLH  &trans
                                   &mt LEFT_CONTROL TAB  &kp SPACE  &kp ENTER        &trans      &trans  &trans
            >;

            label = "QWRT";
        };

        number {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp N1       &kp N2        &kp N3           &kp N4         &kp N5   &none     &none   &kp N6     &kp N7    &kp N8        &kp N9     &kp N0                  &trans
&trans  &kp N6       &kp N7        &kp N8           &kp N9         &kp N0   &none     &none   &kp PG_UP  &kp LEFT  &kp UP_ARROW  &kp RIGHT  &mt RIGHT_CONTROL HOME  &trans
&trans  &kp KP_PLUS  &kp KP_MINUS  &kp KP_MULTIPLY  &kp KP_DIVIDE  &kp DOT  &trans    &trans  &kp PG_DN  &none     &kp DOWN      &kp DOT    &kp END                 &trans
                                                    &trans         &trans   &trans    &trans  &trans     &trans
            >;

            label = "NUM";
        };

        symbol {
            bindings = <
&trans  &kp EXCL               &kp AT_SIGN  &kp HASH  &kp DOLLAR  &kp PERCENT    &none     &none   &kp CARET      &kp AMPERSAND  &kp ASTERISK  &kp DELETE  &kp BACKSPACE  &trans
&trans  &mt LEFT_CONTROL HOME  &kp LEFT     &kp UP    &kp RIGHT   &kp PG_UP      &none     &none   &kp BACKSLASH  &kp MINUS      &kp EQUAL     &kp GRAVE   &kp SEMI       &trans
&trans  &kp END                &none        &kp DOWN  &none       &kp PAGE_DOWN  &trans    &trans  &kp PIPE       &kp UNDER      &kp PLUS      &kp TILDE   &kp COLON      &trans
                                                      &trans      &trans         &trans    &trans  &trans         &trans
            >;

            label = "SYM";
        };

        func {
            bindings = <
&kp F1  &kp F2  &kp F3  &kp F4   &kp F5   &kp F6   &none     &none   &kp K_MUTE  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC  &none
&kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12  &none     &none   &none       &kp LSHFT          &kp LEFT_GUI     &kp LALT              &kp LEFT_CONTROL      &none
&none   &none   &none   &none    &none    &none    &none     &none   &none       &kp C_PREV         &kp C_PP         &kp C_NEXT            &none                 &none
                                 &trans   &trans   &trans    &trans  &trans      &trans
            >;

            label = "FUNC";
        };

        system {
            bindings = <
&none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &none          &none        &none       &none   &none  &none  &none           &none
&none  &none         &none         &none         &none         &none         &none          &none        &none       &none   &none  &none  &none           &none
&none  &bt BT_CLR    &none         &none         &none         &sys_reset    &bootloader    &bootloader  &sys_reset  &none   &none  &none  &studio_unlock  &none
                                                 &trans        &trans        &trans         &trans       &trans      &trans
            >;

            label = "SYS";
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        switch {
            if-layers = <2 3>;
            then-layer = <5>;
        };
    };
};
